{"version":3,"file":"alert-desatualizado.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/alert/stories/alert-desatualizado.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAElH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAK/E,EAAE;AACF,qCAAqC;AACrC,EAAE;AAEF,+BAA+B,EAAE,CAAC;AAElC,MAAM,IAAI,GAA4C;IACpD,KAAK,EAAE,6BAA6B;IACpC,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC;YAChC,WAAW,EAAE,gCAAgC;SAC9C;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,8CAA8C;YAC3D,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC,EAAE;QAChC,IAAI,EAAE,sBAAsB;KAC7B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,aAAa,GAAU;IAClC,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,MAAM,OAAO,GAAG,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;kBACP,IAAI,CAAC,OAAO;;uEAEyC,OAAO;oEACV,IAAI,CAAC,IAAI;gBAC7D,CAAC;IACf,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TP_ICONS_STORYBOOK } from '../../../../utils/constants/icon.constant';\r\nimport { TpIonIcon } from '../../../ionic/icon/utils/icon.type';\r\nimport { TpAlert } from '../alert';\r\nimport { TpAlertType } from '../utils/alert.type';\r\n\r\n//\r\n// !IMPORTANT! Antigo med-alert-fixed\r\n//\r\n\r\ndefineCustomElementSkeletonText();\r\n\r\nconst meta: Meta<TpAlert & TpAlertType & TpIonIcon> = {\r\n  title: 'components/Templarios/Alert',\r\n  argTypes: {\r\n    icon: {\r\n      control: { type: 'select' },\r\n      options: [...TP_ICONS_STORYBOOK],\r\n      description: 'Define o path e nome do icone.',\r\n    },\r\n    text: {\r\n      control: 'text',\r\n      description: 'Define a string a ser exibida no componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado loading do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    color: 'provas-4',\r\n    icon: `${TP_ICONS_STORYBOOK[1]}`,\r\n    text: 'Versão desatualizada',\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<TpAlert & TpAlertType & TpIonIcon>;\r\n\r\nexport const Desatualizado: Story = {\r\n  render: ({ ...args }) => {\r\n    const iconUrl = `./icons/${args.icon}`;\r\n\r\n    return html`<tp-alert\r\n      color=\"${args.color}\"\r\n      ?loading=\"${args.loading}\"\r\n    >\r\n      <ion-icon class=\"tp-alert__icon\" slot=\"icon\" tp-size=\"sm\" src=\"${iconUrl}\"></ion-icon>\r\n      <ion-text class=\"tp-alert__text\" slot=\"text\" tp-type=\"p12x\">${args.text}</ion-text>\r\n    </tp-alert>`;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-alert/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}