{"version":3,"file":"alert.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/alert/stories/alert.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAElH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,yBAAyB;AACzB,+BAA+B,EAAE,CAAC;AAElC,MAAM,IAAI,GAAkB;IAC1B,KAAK,EAAE,6BAA6B;IACpC,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC5B,WAAW,EAAE;;sBAEG,YAAY,CAAC,SAAS,kDAAkD;YACxF,iCAAiC;YACjC,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;iBACvC;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,YAAY,CAAC,OAAO;KAC5B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;kBACP,IAAI,CAAC,OAAO;iBACb,CAAC;IAChB,CAAC;IACD;;;SAGK;CACN,CAAC;AACF,OAAO,CAAC,QAAQ,GAAG;IACjB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpAlert } from '../alert';\r\nimport { TP_ALERT } from '../alert.constants';\r\nimport { TpAlertState } from '../alert.enum';\r\n\r\n// antigo med-alert-fixed\r\ndefineCustomElementSkeletonText();\r\n\r\nconst meta: Meta<TpAlert> = {\r\n  title: 'components/Templarios/Alert',\r\n  argTypes: {\r\n    state: {\r\n      control: { type: 'radio' },\r\n      options: [...TP_ALERT.state],\r\n      description: `Define a variação de estado do componente.\r\n\r\n**OBS**: O **state=\"${TpAlertState.ATUALIZAR}\"** está disponível apenas no theme **MedSoft**.`,\r\n      // TODO  OU USAR HASH PARA COR???\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: [...TP_ALERT.state].join('|'),\r\n        },\r\n      },\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado loading do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    state: TpAlertState.OFFLINE,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`<tp-alert\r\n      state=\"${args.state}\"\r\n      ?loading=\"${args.loading}\"\r\n    ></tp-alert>`;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-alert/gi)).toBeTruthy();\r\n  }, */\r\n};\r\nDefault.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n"]}