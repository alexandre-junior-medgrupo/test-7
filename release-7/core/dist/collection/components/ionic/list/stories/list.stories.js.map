{"version":3,"file":"list.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/list/stories/list.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAW,MAAM,iCAAiC,CAAC;AAC1G,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAGrD,uBAAuB,EAAE,CAAC;AAC1B,uBAAuB,EAAE,CAAC;AAC1B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAAmD;IAC3D,KAAK,EAAE,uBAAuB;IAC9B,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC;YAC/B,WAAW,EAAE,2CAA2C;YACxD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;iBACrC;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;uBACR,IAAI,CAAC,KAAK;;iBAEhB,IAAI,CAAC,KAAK;;;;;;iBAMV,IAAI,CAAC,KAAK;;;;;;;iBAOV,IAAI,CAAC,KAAK;;;;;;;iBAOV,IAAI,CAAC,KAAK;;;;;;;GAOxB,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementItem, IonItem } from '@ionic/core/components/ion-item';\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\nimport { defineCustomElement as defineCustomElementList } from '@ionic/core/components/ion-list';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_ION_LIST } from '../utils/list.constant';\nimport { TpIonList } from '../utils/list.type';\n\ndefineCustomElementList();\ndefineCustomElementItem();\ndefineCustomElementLabel();\n\nconst meta: Meta<Components.IonList & IonItem & TpIonList> = {\n  title: 'components/Ionic/List',\n  argTypes: {\n    lines: {\n      control: { type: 'check' },\n      options: [...TP_ION_LIST.lines],\n      description: 'Define uma borda no bottom do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_ION_LIST.lines.join('|'),\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonList & IonItem & TpIonList>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => html`\n    <ion-list lines=\"${args.lines}\">\n      <ion-item\n        color=\"${args.color}\"\n      >\n        <ion-label>Ion Item</ion-label>\n      </ion-item>\n\n      <ion-item\n        color=\"${args.color}\"\n      >\n        <ion-icon slot=\"start\" src=\"./icons/tp-star.svg\"></ion-icon>\n        <ion-label>Ion Item</ion-label>\n      </ion-item>\n\n      <ion-item\n        color=\"${args.color}\"\n      >\n        <ion-label>Ion Item</ion-label>\n        <ion-icon slot=\"end\" src=\"./icons/tp-star.svg\"></ion-icon>\n      </ion-item>\n\n      <ion-item\n        color=\"${args.color}\"\n      >\n        <ion-icon slot=\"start\" src=\"./icons/tp-star.svg\"></ion-icon>\n        <ion-label>Ion Item</ion-label>\n        <ion-icon slot=\"end\" src=\"./icons/tp-star.svg\"></ion-icon>\n      </ion-item>\n    </ion-list>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-list/gi)).toBeTruthy();\n  }, */\n};\n"]}