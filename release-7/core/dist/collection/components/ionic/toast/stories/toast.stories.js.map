{"version":3,"file":"toast.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/toast/stories/toast.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,yBAAyB,EAAE,MAAM,mCAAmC,CAAC;AACrG,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAEnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAGxD,wBAAwB,EAAE,CAAC;AAC3B,yBAAyB,EAAE,CAAC;AAE5B,MAAM,IAAI,GAA2C;IACnD,KAAK,EAAE,wBAAwB;IAC/B,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACrC,WAAW,EAAE,wCAAwC;YACrD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC3C;aACF;SACF;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wCAAwC;YACrD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,6CAA6C;YAC1D,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,2DAA2D;YACxE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,MAAM;iBAChB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,QAAQ;iBAClB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,uCAAuC;QAChD,IAAI,EAAE,qBAAqB;KAC5B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;;;cAIjB,IAAI,CAAC,IAAI;iBACN,IAAI,CAAC,OAAO;eACd,IAAI,CAAC,KAAK;kBACP,IAAI,CAAC,QAAQ;iBACd,IAAI,CAAC,SAAS,CAAC;qBACX,IAAI,CAAC,YAAY,CAAC;;GAEpC,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementButton } from '@ionic/core/components/ion-button';\r\nimport { defineCustomElement as defineCustomElementToast } from '@ionic/core/components/ion-toast';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TP_ION_TOAST } from '../utils/toast.constants';\r\nimport { TpIonToast } from '../utils/toast.type';\r\n\r\ndefineCustomElementToast();\r\ndefineCustomElementButton();\r\n\r\nconst meta: Meta<Components.IonToast & TpIonToast> = {\r\n  title: 'components/Ionic/Toast',\r\n  argTypes: {\r\n    'tp-size': {\r\n      control: 'check',\r\n      options: [...TP_ION_TOAST['tp-size']],\r\n      description: `Define o estado warning do componente.`,\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: TP_ION_TOAST['tp-size'].join('|'),\r\n        },\r\n      },\r\n    },\r\n    'tp-reverse': {\r\n      control: 'boolean',\r\n      description: `Define a posição do icon do componente`,\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n    icon: {\r\n      control: 'text',\r\n      description: 'Define o icon a ser exibido no componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    message: {\r\n      control: 'text',\r\n      description: 'Define o texto a ser exibido no componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    duration: {\r\n      control: 'number',\r\n      description: 'Define o tempo em milisegundos de exibição do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: '3000',\r\n        },\r\n        type: {\r\n          summary: 'number',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    duration: 300000,\r\n    message: 'Este toast desaparecerá em 3 segundos',\r\n    icon: './icons/tp-star.svg',\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonToast & TpIonToast>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => html`\r\n    <ion-button id=\"open-toast\">Toast</ion-button>\r\n    <ion-toast\r\n      trigger=\"open-toast\"\r\n      icon=\"${args.icon}\"\r\n      message=\"${args.message}\"\r\n      color=\"${args.color}\"\r\n      duration=\"${args.duration}\"\r\n      tp-size=\"${args['tp-size']}\"\r\n      ?tp-reverse=\"${args['tp-reverse']}\"\r\n    ></ion-toast>\r\n  `,\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/ion-toast/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}