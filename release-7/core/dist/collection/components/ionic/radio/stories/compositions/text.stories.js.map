{"version":3,"file":"text.stories.js","sourceRoot":"","sources":["../../../../../../src/components/ionic/radio/stories/compositions/text.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EACL,mBAAmB,IAAI,6BAA6B,GAErD,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,OAAO,EAAE,MAAM,8CAA8C,CAAC;AAGvE,wBAAwB,EAAE,CAAC;AAC3B,6BAA6B,EAAE,CAAC;AAChC,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAA0D;IAClE,KAAK,EAAE,qCAAqC;IAC5C,QAAQ,EAAE;QACR,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,CAAC,SAAS,CAAC,EAAE;YACX,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;YACrB,WAAW,EAAE;;;CAGlB;YACK,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC3B;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,IAAI,GAAU;IACzB,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;0BAEL,IAAI,CAAC,KAAK,gBAAgB,IAAI,CAAC,QAAQ;6BACpC,IAAI,CAAC,SAAS,CAAC;;;;0BAIlB,IAAI,CAAC,KAAK,gBAAgB,IAAI,CAAC,QAAQ;6BACpC,IAAI,CAAC,SAAS,CAAC;;;;0BAIlB,IAAI,CAAC,KAAK,gBAAgB,IAAI,CAAC,QAAQ;6BACpC,IAAI,CAAC,SAAS,CAAC;;;;;GAKzC,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementRadio } from '@ionic/core/components/ion-radio';\r\nimport {\r\n  defineCustomElement as defineCustomElementRadioGroup,\r\n  IonRadioGroup,\r\n} from '@ionic/core/components/ion-radio-group';\r\nimport { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TP_TYPE } from '../../../../../utils/constants/type.constant';\r\nimport { TpIonText } from '../../../text/utils/text.type';\r\n\r\ndefineCustomElementRadio();\r\ndefineCustomElementRadioGroup();\r\ndefineCustomElementText();\r\n\r\nconst meta: Meta<Components.IonRadio & IonRadioGroup & TpIonText> = {\r\n  title: 'components/Ionic/Radio/Compositions',\r\n  argTypes: {\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado disabled do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n    ['tp-type']: {\r\n      control: { type: 'select' },\r\n      options: [...TP_TYPE],\r\n      description: `Define a estilização do texto do componente **'ion-text'**.\r\n\r\n**OBS**: Atributo referente ao componente **'ion-text'**.\r\n`,\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: TP_TYPE.join('|'),\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonRadio & IonRadioGroup & TpIonText>;\r\n\r\nexport const Text: Story = {\r\n  render: ({ ...args }) => html`\r\n    <ion-radio-group class=\"story__ion-radio-group\">\r\n      <ion-radio color=\"${args.color}\" ?disabled=\"${args.disabled}\" value=\"1\">\r\n        <ion-text tp-type=\"${args['tp-type']}\">\r\n          Lorem ipsum, dolor sit amet consectetur.\r\n        </ion-text>\r\n      </ion-radio>\r\n      <ion-radio color=\"${args.color}\" ?disabled=\"${args.disabled}\" value=\"2\">\r\n        <ion-text tp-type=\"${args['tp-type']}\">\r\n          Lorem ipsum, dolor sit amet consectetur.\r\n        </ion-text>\r\n      </ion-radio>\r\n      <ion-radio color=\"${args.color}\" ?disabled=\"${args.disabled}\" value=\"3\">\r\n        <ion-text tp-type=\"${args['tp-type']}\">\r\n          Lorem ipsum, dolor sit amet consectetur.\r\n        </ion-text>\r\n      </ion-radio>\r\n    </ion-radio-group>\r\n  `,\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/ion-radio/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}