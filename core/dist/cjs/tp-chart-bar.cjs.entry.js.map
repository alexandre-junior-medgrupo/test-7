{"file":"tp-chart-bar.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,WAAW,GAAG,y5CAAy5C;;MCUh6C,UAAU;;;;qBASY,CAAC;sBAKA,EAAE;qBAKH,EAAE;uBAKA,KAAK;;;IAOxC,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QAE/D,MAAM,UAAU,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC;QAEtE,IAAI,OAAO,CAAC;QAEZ,IAAI,OAAO,EAAE;YACX,OAAO,IACLA,iBAAK,KAAK,EAAC,yBAAyB,IACjC,CAAC,OAAO,KACPA,+BACE,KAAK,EAAC,8BAA8B,EACpC,QAAQ,SACW,CACtB,EACDA,+BACE,KAAK,EAAC,wBAAwB,EAC9B,QAAQ,SACW,CACjB,CACP,CAAC;SACH;aAAM;YACL,OAAO,IACLA,iBAAK,KAAK,EAAC,yBAAyB,IACjC,CAAC,OAAO,KACPA,iBAAK,KAAK,EAAC,qBAAqB,IAC9BA,qBAAa,CACT,CACP,EAEDA,iBAAK,KAAK,EAAC,wBAAwB,GAAO,CACtC,CACP,CAAC;SACH;QAED,QACEA,QAACC,UAAI,IACH,KAAK,EAAEC,iCAAkB,CAAC,KAAK,EAAE;gBAC/B,cAAc,EAAE,IAAI;gBACpB,wBAAwB,EAAE,OAAO;gBACjC,uBAAuB,EAAE,OAAO;aACjC,CAAC,EACF,KAAK,EAAE;gBACL,SAAS,EAAE,GAAG,UAAU,EAAE;gBAC1B,UAAU,EAAE,GAAG,MAAM,EAAE;gBACvB,SAAS,EAAE,GAAG,KAAK,EAAE;aACtB,IAEA,OAAO,CACH,EACP;KACH;;;;;;;","names":["h","Host","createColorClasses"],"sources":["src/components/templarios/chart-bar/chart-bar.scss?tag=tp-chart-bar&encapsulation=shadow","src/components/templarios/chart-bar/chart-bar.tsx"],"sourcesContent":["/**\r\n  * @prop --value: Propriedade definida dinamicamente. Define o valor do preenchimento do componente.\r\n  * @prop --width: Propriedade definida dinamicamente. Define a largura do componente.\r\n  * @prop --height: Propriedade definida dinamicamente. Define a altura do componente.\r\n  * @prop --tp-skeleton-height: Define a altura do skeleton do componente.\r\n  * @prop --tp-skeleton-width: Define a largura do skeleton do componente.\r\n  * @prop --tp-skeleton-background-rgb: Define o background rgb do skeleton do componente.\r\n*/\r\n\r\n:host {\r\n  --tp-skeleton-height: calc(var(--height) * 1px);\r\n  --tp-skeleton-width: calc(var(--width) * 1px);\r\n  --tp-skeleton-background-rgb: var(--tp-color-neutral-10-rgb);\r\n\r\n  display: block;\r\n  width: calc(var(--width) * 1px);\r\n  height: max-content;\r\n  color: var(--tp-color-neutral-10);\r\n  border-radius: 2px;\r\n}\r\n\r\n.tp-chart-bar {\r\n  &__container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    height: calc(var(--height) + var(--height-label) * 1px);\r\n    overflow: hidden;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &__label {\r\n    display: flex;\r\n    margin-bottom: 6px;\r\n    transform: translateY(calc(var(--height) * 1px - var(--value) * 1px));\r\n  }\r\n\r\n  &__progress {\r\n    width: 100%;\r\n    height: calc(var(--height) * 1px);\r\n    background: var(--tp-color-brand-4);\r\n    border-radius: 2px;\r\n    animation: load-chart-bar forwards 400ms ease-in-out;\r\n  }\r\n\r\n  &__label-skeleton {\r\n    --background-rgb: var(--tp-skeleton-background-rgb);\r\n    --border-radius: 2px;\r\n    width: var(--tp-skeleton-width);\r\n    height: 12px;\r\n    margin: 0 0 6px;\r\n  }\r\n\r\n  &__skeleton {\r\n    --background-rgb: var(--tp-skeleton-background-rgb);\r\n    --border-radius: 2px;\r\n    width: var(--tp-skeleton-width);\r\n    height: var(--tp-skeleton-height);\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n//\r\n// no-label\r\n//\r\n:host(.tp-chart-bar--no-label) {\r\n  background: var(--tp-color-neutral-2);\r\n}\r\n\r\n//\r\n// loading\r\n//\r\n:host(.tp-chart-bar--loading) {\r\n  background: transparent;\r\n}\r\n\r\n//\r\n// color\r\n//\r\n:host(.tp-color) .tp-chart-bar__progress {\r\n  background: var(--tp-color-base);\r\n}\r\n\r\n//\r\n// animations\r\n//\r\n@keyframes load-chart-bar {\r\n  0% {\r\n    transform: translateY(calc(var(--height) * 1px));\r\n  }\r\n\r\n  100% {\r\n    transform: translateY(calc(var(--height) * 1px - var(--value) * 1px));\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport type { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-chart-bar',\r\n  styleUrl: 'chart-bar.scss',\r\n  assetsDirs: ['assets'],\r\n  shadow: true,\r\n})\r\nexport class TpChartBar {\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * Define o valor do preenchimento do componente.\r\n   */\r\n  @Prop({ reflect: true }) value = 0;\r\n\r\n  /**\r\n   * Define a altura do componente.\r\n   */\r\n  @Prop({ reflect: true }) height = 50;\r\n\r\n  /**\r\n   * Define a largura do componente.\r\n   */\r\n  @Prop({ reflect: true }) width = 32;\r\n\r\n  /**\r\n   * Define se o componente irá apresentar rótulo ou não.\r\n   */\r\n  @Prop({ reflect: true }) noLabel = false;\r\n\r\n  /**\r\n   * Define o estado de carregamento do componente.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\r\n\r\n  render() {\r\n    const { color, value, height, width, noLabel, loading } = this;\r\n\r\n    const percentage = (height * Math.min(Math.max(0, value), 100)) / 100;\r\n\r\n    let content;\r\n\r\n    if (loading) {\r\n      content = (\r\n        <div class=\"tp-chart-bar__container\">\r\n          {!noLabel && (\r\n            <ion-skeleton-text\r\n              class=\"tp-chart-bar__label-skeleton\"\r\n              animated\r\n            ></ion-skeleton-text>\r\n          )}\r\n          <ion-skeleton-text\r\n            class=\"tp-chart-bar__skeleton\"\r\n            animated\r\n          ></ion-skeleton-text>\r\n        </div>\r\n      );\r\n    } else {\r\n      content = (\r\n        <div class=\"tp-chart-bar__container\">\r\n          {!noLabel && (\r\n            <div class=\"tp-chart-bar__label\">\r\n              <slot></slot>\r\n            </div>\r\n          )}\r\n\r\n          <div class=\"tp-chart-bar__progress\"></div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-chart-bar': true,\r\n          'tp-chart-bar--no-label': noLabel,\r\n          'tp-chart-bar--loading': loading,\r\n        })}\r\n        style={{\r\n          '--value': `${percentage}`,\r\n          '--height': `${height}`,\r\n          '--width': `${width}`,\r\n        }}\r\n      >\r\n        {content}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}