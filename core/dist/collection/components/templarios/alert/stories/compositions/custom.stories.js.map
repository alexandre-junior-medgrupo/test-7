{"version":3,"file":"custom.stories.js","sourceRoot":"","sources":["../../../../../../src/components/templarios/alert/stories/compositions/custom.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAElH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,yBAAyB;AACzB,+BAA+B,EAAE,CAAC;AAElC,MAAM,IAAI,GAAkB;IAC1B,KAAK,EAAE,0CAA0C;IACjD,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,8CAA8C;YAC3D,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,aAAa;QACnB,OAAO,EAAE,wCAAwC;KAClD;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,MAAM,GAAU;IAC3B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;cACX,IAAI,CAAC,IAAI;iBACN,IAAI,CAAC,OAAO;kBACX,IAAI,CAAC,OAAO;iBACb,CAAC;IAChB,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpAlert } from '../../alert';\r\n\r\n// antigo med-alert-fixed\r\ndefineCustomElementSkeletonText();\r\n\r\nconst meta: Meta<TpAlert> = {\r\n  title: 'components/Templarios/Alert/Compositions',\r\n  argTypes: {\r\n    icon: {\r\n      control: 'text',\r\n      description: 'Define o icon a ser exibido no componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    message: {\r\n      control: 'text',\r\n      description: 'Define a string a ser exibida no componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado loading do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    icon: 'tp-activity',\r\n    message: 'Essa é uma mensagem a ser apresentada.',\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj;\r\n\r\nexport const Custom: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`<tp-alert\r\n      color=\"${args.color}\"\r\n      icon=\"${args.icon}\"\r\n      message=\"${args.message}\"\r\n      ?loading=\"${args.loading}\"\r\n    ></tp-alert>`;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-alert/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}