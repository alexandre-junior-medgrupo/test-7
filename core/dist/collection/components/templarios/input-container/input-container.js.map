{"version":3,"file":"input-container.js","sourceRoot":"","sources":["../../../../src/components/templarios/input-container/input-container.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAC7E,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AASvE,MAAM,OAAO,gBAAgB;;QACnB,sBAAiB,GAAG,YAAY,CAAC,gCAAgC,CAAC,CAAC;QACnE,cAAS,GAAG,YAAY,CAAC,uBAAuB,CAAC,CAAC;;;;IAY1D,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC5D,IAAI,OAAO,CAAC;QAEZ,MAAM,IAAI,GAAG,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;QAE/D,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,CACR,WAAK,KAAK,EAAC,qCAAqC;gBAC9C,gBACE,KAAK,EAAC,0BAA0B,EAChC,GAAG,EAAE,IAAI,iBACG,MAAM,GACR,CACR,CACP,CAAC;SACH;QAED,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,oBAAoB,EAAE,IAAI;gBAC1B,gCAAgC,EAAE,KAAK,KAAK,OAAO;gBACnD,kCAAkC,EAAE,KAAK,KAAK,SAAS;aACxD,CAAC;YAEF,YAAM,IAAI,EAAC,OAAO,GAAQ;YAC1B,WAAK,KAAK,EAAC,6BAA6B;gBACtC,eAAa;gBACZ,OAAO,CACJ;YACN,YAAM,IAAI,EAAC,kBAAkB,GAAQ;YACrC,YAAM,IAAI,EAAC,gBAAgB,GAAQ,CAC9B,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { Component, Host, Prop, getAssetPath, h } from '@stencil/core';\r\nimport type { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-input-container',\r\n  styleUrl: 'input-container.scss',\r\n  assetsDirs: ['assets'],\r\n  shadow: true,\r\n})\r\nexport class TpInputContainer {\r\n  private alertTriangleIcon = getAssetPath('./assets/tp-alert-triangle.svg');\r\n  private CheckIcon = getAssetPath('./assets/tp-check.svg');\r\n\r\n  /**\r\n  * Define a variação de cor do componente.\r\n  */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * Define a variação de estado do componente.\r\n   */\r\n  @Prop({ reflect: true }) state?: 'error' | 'success';\r\n\r\n  render() {\r\n    const { color, state, alertTriangleIcon, CheckIcon } = this;\r\n    let content;\r\n\r\n    const icon = state === 'error' ? alertTriangleIcon : CheckIcon;\r\n\r\n    if (state) {\r\n      content = (\r\n        <div class=\"tp-input-container__state-container\">\r\n          <ion-icon\r\n            class=\"tp-input-container__icon\"\r\n            src={icon}\r\n            aria-hidden=\"true\"\r\n          ></ion-icon>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-input-container': true,\r\n          'tp-comparison-chart-bar--error': state === 'error',\r\n          'tp-comparison-chart-bar--success': state === 'success',\r\n        })}\r\n      >\r\n        <slot name=\"label\"></slot>\r\n        <div class=\"tp-input-container__wrapper\">\r\n          <slot></slot>\r\n          {content}\r\n        </div>\r\n        <slot name=\"feedback-success\"></slot>\r\n        <slot name=\"feedback-error\"></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}