{"version":3,"file":"button-cluster.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/button-cluster/stories/button-cluster.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAClH,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,+BAA+B,EAAE,CAAC;AAClC,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAA0B;IAClC,KAAK,EAAE,sCAAsC;IAC7C,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,MAAM;iBAChB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,IAAI;KAChB;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;oBACL,IAAI,CAAC,SAAS;kBAChB,IAAI,CAAC,OAAO;;;;yBAIL,CAAC;IACxB,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\r\nimport { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpButtonCluster } from '../button-cluster';\r\n\r\ndefineCustomElementSkeletonText();\r\ndefineCustomElementText();\r\n\r\nconst meta: Meta<TpButtonCluster> = {\r\n  title: 'components/Templarios/Button cluster',\r\n  argTypes: {\r\n    collapsed: {\r\n      control: 'boolean',\r\n      description: 'Define a variação de estado do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'true',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n    loading: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado loading do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    collapsed: true,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`<tp-button-cluster\r\n      color=\"${args.color}\"\r\n      ?collapsed=\"${args.collapsed}\"\r\n      ?loading=\"${args.loading}\"\r\n    >\r\n      <tp-text slot=\"expand-text\" tp-type=\"p12\">Expandir a lista</tp-text>\r\n      <tp-text slot=\"collapse-text\" tp-type=\"p12\">Ocultar a lista</tp-text>\r\n    </tp-button-cluster>`;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-button-cluster/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}