{"version":3,"file":"state.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/textarea/state.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAE1E,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,mBAAmB,EAAE,CAAC;AAEtB,MAAM,IAAI,GAAiD;IACzD,KAAK,EAAE,2BAA2B;IAClC,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,QAAQ;iBAClB;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,uBAAuB;KACnC;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,gBAAgB,GAAG,GAAG,EAAE;IAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAExD,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAE1D,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,EAAE;QAC9B,OAAO,KAAK,CAAC,KAAK,CAChB,oMAAoM,CACrM,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE;QACtB,MAAM,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QAE9B,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACvC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAEzC,IAAI,KAAK,KAAK,EAAE;YAAE,OAAO;QAEzB,aAAa,CAAC,KAAK,CAAC;YAClB,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC;YACrC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,UAAU,CAAC,GAAG,EAAE;YACd,gBAAgB,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,OAAO,IAAI,CAAA;;sBAEO,IAAI,CAAC,SAAS;iBACnB,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;;;;KAI7B,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement } from '@ionic/core/components/ion-textarea';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpIonTextarea } from './textarea.type';\n\ndefineCustomElement();\n\nconst meta: Meta<Components.IonTextarea & TpIonTextarea> = {\n  title: 'components/Ionic/Textarea',\n  argTypes: {\n    errorText: {\n      control: { type: 'text' },\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'string',\n        },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n  args: {\n    errorText: '*Caracteres invalidos',\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonTextarea & TpIonTextarea>;\n\nconst validateTextarea = () => {\n  const textarea = document.querySelector('ion-textarea');\n\n  textarea.addEventListener('ionInput', (ev) => validate(ev));\n  textarea.addEventListener('ionBlur', () => markTouched());\n\n  const validateEmail = (email) => {\n    return email.match(\n      /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n    );\n  };\n\n  const validate = (ev) => {\n    const value = ev.target.value;\n\n    textarea.classList.remove('ion-valid');\n    textarea.classList.remove('ion-invalid');\n\n    if (value === '') return;\n\n    validateEmail(value)\n      ? textarea.classList.add('ion-valid')\n      : textarea.classList.add('ion-invalid');\n  };\n\n  const markTouched = () => {\n    textarea.classList.add('ion-touched');\n  };\n};\n\nexport const State: Story = {\n  render: ({ ...args }) => {\n    setTimeout(() => {\n      validateTextarea();\n    }, 1000);\n\n    return html`\n      <ion-textarea\n        error-text=\"${args.errorText}\"\n        color=\"${args.color}\"\n        ?disabled=\"${args.disabled}\"\n        placeholder=\"Digite um e-mail valido\"\n        mode=\"md\"\n      ></ion-textarea>\n    `;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-badge/gi)).toBeTruthy();\n  }, */\n};\n"]}