{"version":3,"file":"states.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/textarea/stories/states.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAE1E,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,qEAAqE,CAAC;AAIzG,mBAAmB,EAAE,CAAC;AAEtB,MAAM,IAAI,GAAoE;IAC5E,KAAK,EAAE,2BAA2B;IAClC,QAAQ,EAAE;QACR,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC;YACtC,WAAW,EAAC;;;CAGjB;YACK,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC5C;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,MAAM,GAAU;IAC3B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;iCACE,IAAI,CAAC,KAAK,YAAY,IAAI,CAAC,KAAK;;;qBAG5C,IAAI,CAAC,QAAQ;;;;;;;GAO/B,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement } from '@ionic/core/components/ion-textarea';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_INPUT_CONTAINER } from '../../../templarios/input-container/utils/input-container.constants';\nimport { TpInputContainer } from '../../../templarios/input-container/utils/input-container.type';\nimport { TpIonTextarea } from '../utils/textarea.type';\n\ndefineCustomElement();\n\nconst meta: Meta<Components.IonTextarea & TpIonTextarea & TpInputContainer> = {\n  title: 'components/Ionic/Textarea',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    state: {\n      control: { type: 'select' },\n      options: [...TP_INPUT_CONTAINER.state],\n      description:`Define o estado do componente **'tp-input-container'**.\n\n**OBS**: Atributo referente ao componente **'tp-input-container'**.\n`,\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_INPUT_CONTAINER.state.join('|'),\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonTextarea & TpIonTextarea & TpInputContainer>;\n\nexport const States: Story = {\n  render: ({ ...args }) => html`\n    <tp-input-container color=\"${args.color}\" state=\"${args.state}\">\n      <ion-label slot=\"label\" tp-type=\"p14\">Descrição Textarea</ion-label>\n      <ion-textarea\n        ?disabled=\"${args.disabled}\"\n        placeholder=\"Lorem ipsum, dolor sit amet consectetur.\"\n        mode=\"md\"\n      ></ion-textarea>\n      <ion-label slot=\"feedback-error\" tp-type=\"p14\">*Caracteres invalidos.</ion-label>\n      <ion-label slot=\"feedback-success\" tp-type=\"p14\">*Caracteres validos</ion-label>\n    </tp-input-container>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-textarea/gi)).toBeTruthy();\n  }, */\n};\n"]}