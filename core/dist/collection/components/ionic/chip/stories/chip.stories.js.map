{"version":3,"file":"chip.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/chip/stories/chip.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAEnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAGtD,uBAAuB,EAAE,CAAC;AAC1B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAAyC;IACjD,KAAK,EAAE,uBAAuB;IAC9B,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC;YAC9B,WAAW,EAAE,iCAAiC;YAC9C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;iBACpC;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,MAAM,EAAE;YACN,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,qDAAqD;YAClE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;kBAEb,IAAI,CAAC,MAAM;cACf,IAAI,CAAC,IAAI;eACR,IAAI,CAAC,KAAK;mBACN,IAAI,CAAC,QAAQ;;;;;;kBAMd,IAAI,CAAC,MAAM;cACf,IAAI,CAAC,IAAI;eACR,IAAI,CAAC,KAAK;mBACN,IAAI,CAAC,QAAQ;;;;;;;kBAOd,IAAI,CAAC,MAAM;cACf,IAAI,CAAC,IAAI;eACR,IAAI,CAAC,KAAK;mBACN,IAAI,CAAC,QAAQ;;;;;;;kBAOd,IAAI,CAAC,MAAM;cACf,IAAI,CAAC,IAAI;eACR,IAAI,CAAC,KAAK;mBACN,IAAI,CAAC,QAAQ;;;;;;GAM7B,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementChip } from '@ionic/core/components/ion-chip';\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_ION_CHIP } from '../utils/chip.constants';\nimport { TpIonChip } from '../utils/chip.type';\n\ndefineCustomElementChip();\ndefineCustomElementLabel();\n\nconst meta: Meta<Components.IonChip & TpIonChip> = {\n  title: 'components/Ionic/Chip',\n  argTypes: {\n    size: {\n      control: { type: 'check' },\n      options: [...TP_ION_CHIP.size],\n      description: 'Define o tamanho do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_ION_CHIP.size.join('|'),\n        },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define a estilização do estado ativo do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonChip & TpIonChip>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => html`\n    <ion-chip\n      ?outline=\"${args.active}\"\n      size=\"${args.size}\"\n      color=\"${args.color}\"\n      ?disabled=\"${args.disabled}\"\n    >\n      <ion-label>ion-chip</ion-label>\n    </ion-chip>\n\n    <ion-chip\n      ?outline=\"${args.active}\"\n      size=\"${args.size}\"\n      color=\"${args.color}\"\n      ?disabled=\"${args.disabled}\"\n    >\n      <ion-icon tp-size=\"md\" src=\"./icons/tp-star.svg\"></ion-icon>\n      <ion-label>ion-chip</ion-label>\n    </ion-chip>\n\n    <ion-chip\n      ?outline=\"${args.active}\"\n      size=\"${args.size}\"\n      color=\"${args.color}\"\n      ?disabled=\"${args.disabled}\"\n    >\n      <ion-label>ion-chip</ion-label>\n      <ion-icon tp-size=\"md\" src=\"./icons/tp-star.svg\"></ion-icon>\n    </ion-chip>\n\n    <ion-chip\n      ?outline=\"${args.active}\"\n      size=\"${args.size}\"\n      color=\"${args.color}\"\n      ?disabled=\"${args.disabled}\"\n    >\n      <ion-icon tp-size=\"md\" src=\"./icons/tp-star.svg\"></ion-icon>\n      <ion-label>ion-chip</ion-label>\n      <ion-icon tp-size=\"md\" src=\"./icons/tp-star.svg\"></ion-icon>\n    </ion-chip>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-text/gi)).toBeTruthy();\n  }, */\n};\n"]}