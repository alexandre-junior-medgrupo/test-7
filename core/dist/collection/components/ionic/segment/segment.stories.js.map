{"version":3,"file":"segment.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/segment/segment.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;AACvG,OAAO,EAAE,mBAAmB,IAAI,gCAAgC,EAAE,MAAM,2CAA2C,CAAC;AAEpH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,0BAA0B,EAAE,CAAC;AAC7B,gCAAgC,EAAE,CAAC;AACnC,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAA+C;IACvD,KAAK,EAAE,0BAA0B;IACjC,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,8CAA8C;YAC3D,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;;;iBAId,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;uBACX,IAAI,CAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCnC,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\r\nimport { defineCustomElement as defineCustomElementSegment } from '@ionic/core/components/ion-segment';\r\nimport { defineCustomElement as defineCustomElementSegmentButton } from '@ionic/core/components/ion-segment-button';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpIonSegment } from './segment.type';\r\n\r\ndefineCustomElementSegment();\r\ndefineCustomElementSegmentButton();\r\ndefineCustomElementLabel();\r\n\r\nconst meta: Meta<Components.IonSegment & TpIonSegment> = {\r\n  title: 'components/Ionic/Segment',\r\n  argTypes: {\r\n    scrollable: {\r\n      control: 'boolean',\r\n      description: 'Define se o componente terá barra de scroll.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: false,\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado disabled do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: false,\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonSegment & TpIonSegment>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => html`\r\n    <div class=\"teste\">\r\n      <ion-segment\r\n        mode=\"md\"\r\n        color=\"${args.color}\"\r\n        ?disabled=\"${args.disabled}\"\r\n        ?scrollable=\"${args.scrollable}\"\r\n        value=\"Tabs1\"\r\n      >\r\n        <ion-segment-button value=\"Tabs1\">\r\n          <ion-label>Tabs 1</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs2\">\r\n          <ion-label>Tabs 2</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs3\">\r\n          <ion-label>Tabs 3</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs4\">\r\n          <ion-label>Tabs 4</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs5\">\r\n          <ion-label>Tabs 5</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs6\">\r\n          <ion-label>Tabs 6</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs7\">\r\n          <ion-label>Tabs 7</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs8\">\r\n          <ion-label>Tabs 8</ion-label>\r\n        </ion-segment-button>\r\n\r\n        <ion-segment-button value=\"Tabs9\">\r\n          <ion-label>Tabs 9</ion-label>\r\n        </ion-segment-button>\r\n      </ion-segment>\r\n    </div>\r\n  `,\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/ion-segment/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}