@use 'sass:map';

$tp-button-sizes: (
  xxs: (
    properties: (
      padding-top: 4px,
      padding-bottom: 4px,
      padding-start: 12px,
      padding-end: 12px,
    ),
  ),
  xs: (
    properties: (
      padding-top: 8px,
      padding-bottom: 8px,
      padding-start: 12px,
      padding-end: 12px,
    ),
  ),
  sm: (
    properties: (
      padding-top: 12px,
      padding-bottom: 12px,
      padding-start: 16px,
      padding-end: 16px,
    ),
  ),
);

ion-button {
  &.button-clear {
    --background: transparent;
    --background-hover-opacity: 0;
    --color: var(--tp-color-neutral-10);
    --color-hover: var(--tp-color-brand-3);
    --background-hover: transparent;
    --padding-top: 16px;
    --padding-bottom: 16px;
    --padding-start: 16px;
    --padding-end: 16px;

    ion-icon {
      --stroke: var(--color-hover);
    }

    &:not(:hover) {
      ion-icon {
        --stroke: var(--color);
      }
    }
  }
}

//
// color
//
ion-button {
  &.button-clear.ion-color:not(:hover) {
    --ion-color-base: var(--tp-color-neutral-10) !important;

    ion-icon {
      --stroke: var(--ion-color-base);
    }
  }
}

//
// sizes
//
ion-button {
  @each $size-name, $size-value in $tp-button-sizes {
    &.button-#{$size-name}.button-clear {
      $properties-map: map.get($size-value, properties);

      @each $properties-name, $properties-value in $properties-map {
        --#{$properties-name}: #{$properties-value};
      }
    }
  }
}
