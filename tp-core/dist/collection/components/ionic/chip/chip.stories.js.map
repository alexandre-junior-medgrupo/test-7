{"version":3,"file":"chip.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/chip/chip.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAC;AAEtE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,mBAAmB,EAAE,CAAC;AAEtB,MAAM,IAAI,GAAyC;EACjD,KAAK,EAAE,uBAAuB;EAC9B,QAAQ,EAAE;IACR,IAAI,EAAE;MACJ,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;MACzB,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,MAAM;SAChB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,QAAQ;SAClB;OACF;KACF;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;MAClB,WAAW,EAAE,wDAAwD;MACrE,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,WAAW;SACrB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,SAAS;SACnB;OACF;KACF;GACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;EAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;QAAV,IAAI,cAAT,EAAW,CAAF;IAAO,OAAA,IAAI,CAAA;+BACA,IAAI,CAAC,KAAK,gBAAgB,IAAI,CAAC,QAAQ;QAC9D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;;GAEnC,CAAA;GAAA;EACD;;;OAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement } from '@ionic/core/components/ion-chip';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpIonChip } from './chip.type';\n\ndefineCustomElement();\n\nconst meta: Meta<Components.IonChip & TpIonChip> = {\n  title: 'components/Ionic/Chip',\n  argTypes: {\n    slot: {\n      control: { type: 'text' },\n      table: {\n        defaultValue: {\n          summary: 'Chip',\n        },\n        type: {\n          summary: 'string',\n        },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonChip & TpIonChip>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => html`\n    <ion-chip outline color=\"${args.color}\" ?disabled=\"${args.disabled}\">\n      ${args.slot ? args.slot : 'Chip'}\n    </ion-chip>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-text/gi)).toBeTruthy();\n  }, */\n};\n"]}