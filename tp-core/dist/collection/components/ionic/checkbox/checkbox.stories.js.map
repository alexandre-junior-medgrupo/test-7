{"version":3,"file":"checkbox.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/checkbox/checkbox.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,2BAA2B,EAAE,MAAM,qCAAqC,CAAC;AAEzG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,2BAA2B,EAAE,CAAC;AAE9B,MAAM,IAAI,GAAiD;EACzD,KAAK,EAAE,2BAA2B;EAClC,QAAQ,EAAE;IACR,OAAO,EAAE;MACP,OAAO,EAAE,SAAS;MAClB,WAAW,EAAE,uDAAuD;MACpE,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,WAAW;SACrB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,SAAS;SACnB;OACF;KACF;IACD,aAAa,EAAE;MACb,OAAO,EAAE,SAAS;MAClB,WAAW,EACT,6DAA6D;MAC/D,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,WAAW;SACrB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,SAAS;SACnB;OACF;KACF;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;MAClB,WAAW,EAAE,wDAAwD;MACrE,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,WAAW;SACrB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,SAAS;SACnB;OACF;KACF;GACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;EAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;QAAV,IAAI,cAAT,EAAW,CAAF;IAAO,OAAA,IAAI,CAAA;;eAEhB,IAAI,CAAC,KAAK;kBACP,IAAI,CAAC,OAAO;wBACN,IAAI,CAAC,aAAa;mBACvB,IAAI,CAAC,QAAQ;;;GAG7B,CAAA;GAAA;EACD;;;OAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementCheckbox } from '@ionic/core/components/ion-checkbox';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpIonCheckbox } from './checkbox.type';\n\ndefineCustomElementCheckbox();\n\nconst meta: Meta<Components.IonCheckbox & TpIonCheckbox> = {\n  title: 'components/Ionic/Checkbox',\n  argTypes: {\n    checked: {\n      control: 'boolean',\n      description: 'Define a estilização do estado checked do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    indeterminate: {\n      control: 'boolean',\n      description:\n        'Define a estilização do estado indeterminate do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonCheckbox & TpIonCheckbox>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => html`\n    <ion-checkbox\n      color=\"${args.color}\"\n      ?checked=\"${args.checked}\"\n      ?indeterminate=\"${args.indeterminate}\"\n      ?disabled=\"${args.disabled}\"\n    >\n    </ion-checkbox>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-checkbox/gi)).toBeTruthy();\n  }, */\n};\n"]}