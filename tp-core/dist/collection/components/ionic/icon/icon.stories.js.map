{"version":3,"file":"icon.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/icon/icon.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,wCAAwC,CAAC;AAC5E,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,IAAI,GAAyC;EACjD,SAAS,EAAE,UAAU;EACrB,QAAQ,EAAE;IACR,GAAG,EAAE;MACH,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;MAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC;KACjC;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;MAC3B,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC;KAC/B;GACF;EACD,IAAI,EAAE;IACJ,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC,EAAE;GAChC;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;EAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;QAAV,IAAI,cAAT,EAAW,CAAF;IAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEtB,MAAM,OAAO,GAAG,WAAW,IAAI,CAAC,GAAG,EAAE,CAAC;IACtC,OAAO,IAAI,CAAA;cACD,OAAO;gBACL,IAAI,CAAC,KAAK;iBACT,IAAI,CAAC,IAAI;iBACT,CAAC;EAChB,CAAC;EACD;;;OAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TP_ICONS_STORYBOOK } from '../../../utils/constants/icon.constant';\r\nimport { TP_ION_ICON } from './icon.constant';\r\nimport { TpIonIcon } from './icon.type';\r\n\r\nconst meta: Meta<Components.IonIcon & TpIonIcon> = {\r\n  component: 'ion-icon',\r\n  argTypes: {\r\n    src: {\r\n      control: { type: 'select' },\r\n      options: [...TP_ICONS_STORYBOOK],\r\n    },\r\n    size: {\r\n      control: { type: 'select' },\r\n      options: [...TP_ION_ICON.size],\r\n    },\r\n  },\r\n  args: {\r\n    src: `${TP_ICONS_STORYBOOK[0]}`,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonIcon & TpIonIcon>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    console.log(args.src);\r\n\r\n    const iconUrl = `./icons/${args.src}`;\r\n    return html`<ion-icon\r\n      .src=\"${iconUrl}\"\r\n      .color=\"${args.color}\"\r\n      tp-size=\"${args.size}\"\r\n    ></ion-icon>`;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/ion-icon/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}