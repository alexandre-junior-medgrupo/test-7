{"version":3,"file":"progress-bar.stories.js","sourceRoot":"","sources":["../../../../src/components/ionic/progress-bar/progress-bar.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAE9E,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,mBAAmB,EAAE,CAAC;AAEtB,MAAM,IAAI,GAAuD;EAC/D,KAAK,EAAE,+BAA+B;EACtC,QAAQ,EAAE;IACR,KAAK,EAAE;MACL,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE;MACrD,WAAW,EAAE,kDAAkD;MAC/D,KAAK,EAAE;QACL,YAAY,EAAE;UACZ,OAAO,EAAE,WAAW;SACrB;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,QAAQ;SAClB;OACF;KACF;GACF;EACD,IAAI,EAAE;IACJ,KAAK,EAAE,EAAE;GACV;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;EAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;QAAV,IAAI,cAAT,EAAW,CAAF;IAAO,OAAA,IAAI,CAAA;;eAEhB,IAAI,CAAC,KAAK;eACV,IAAI,CAAC,KAAK,GAAG,GAAG;;GAE5B,CAAA;GAAA;EACD;;;OAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement } from '@ionic/core/components/ion-progress-bar';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpIonProgressBar } from './progress-bar.type';\r\n\r\ndefineCustomElement();\r\n\r\nconst meta: Meta<Components.IonProgressBar & TpIonProgressBar> = {\r\n  title: 'components/Ionic/Progress Bar',\r\n  argTypes: {\r\n    value: {\r\n      control: { type: 'range', min: 0, max: 100, step: 1 },\r\n      description: `Define a estilização do progresso do componente.`,\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: 'number',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    value: 50,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonProgressBar & TpIonProgressBar>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => html`\r\n    <ion-progress-bar\r\n      color=\"${args.color}\"\r\n      value=\"${args.value / 100}\"\r\n    ></ion-progress-bar>\r\n  `,\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/ion-text/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}